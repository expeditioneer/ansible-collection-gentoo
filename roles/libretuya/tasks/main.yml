---

## /usr/local
#git clone https://github.com/kuba2k2/libretuya-esphome -b platform/libretuya
#python -m venv libretuya-esphome
#source bin/activate
#python -m pip install -e .
#
#---

- name: assert that mandatory variables are defined
  ansible.builtin.assert:
    that:
      - libretuya_username is defined
      - libretuya_password is defined
      - libretuya_configuration_dir is defined
      - libretuya_install_dir is defined
      - libretuya_nginx_configuration_dir is defined
      - libretuya_run_directory is defined
      - nginx_configuration_directory is defined

- name: Create service user libretuya
  ansible.builtin.user:
    name: libretuya
    comment: System user; LibreTuya Dashboard
    home: '{{ libretuya_configuration_dir }}'
    system: yes
    groups:
      - dialout
      - usb
  become: true

- name: Create tmpfiles.d libretuya configuration
  ansible.builtin.template:
    src: libretuya.tmpfiles.j2
    dest: /etc/tmpfiles.d/libretuya.conf
    owner: root
    group: root
    mode: 0644
  become: true
  notify:
    - Create systemd-tmpfiles for libretuya

- name: Create necessary directories for libretuya
  ansible.builtin.file:
    path: '{{ directory.path }}'
    state: directory
    owner: "{{ directory.owner | default('libretuya') }}"
    group: "{{ directory.group | default('libretuya') }}"
    mode: 0750
  loop:
    - { path: '{{ libretuya_configuration_dir }}' }
    - { path: '{{ libretuya_install_dir }}' }
    - { path: '{{ libretuya_nginx_configuration_dir }}', owner: nginx, group: nginx }
  loop_control:
    loop_var: directory

- name: 'Grant user nginx read access to directory {{ libretuya_install_dir }}'
  ansible.posix.acl:
    path: '{{ libretuya_install_dir }}'
    entity: nginx
    etype: user
    permissions: rx
    state: present
  become: true

#- name: Install libretuya into a virtualenv, inheriting none of the globally installed modules
#  ansible.builtin.pip:
#    name: '{{ package }}'
#    virtualenv: '{{ libretuya_install_dir }}'
#  become: true
#  become_user: libretuya
#  loop:
#    - wheel
#    - esphome
#  loop_control:
#    loop_var: package

- name: Create systemd service file for libretuya
  ansible.builtin.template:
    src: libretuya.service.j2
    dest: /etc/systemd/system/libretuya.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: Restart libretuya dashboard systemd service

- name: Start and enable libretuya dashboard systemd service
  ansible.builtin.systemd:
    name: libretuya
    state: started
    enabled: yes
  become: true

- name: Create nginx configuration for libretuya
  ansible.builtin.template:
    src: nginx.libretuya.conf.j2
    dest: '{{ nginx_configuration_directory }}/libretuya.conf'
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart NGINX

- name: Create nginx configuration snippets for libretuya
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ libretuya_nginx_configuration_dir }}/{{ item.dest }}'
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart NGINX
  loop:
    - { src: nginx.libretuya.upstream.conf.j2, dest: upstream.conf }
    - { src: nginx.libretuya.locations.conf.j2, dest: locations.conf }

- name: Update libretuya HTTPS certificate
  ansible.builtin.copy:
    src: '{{ file.name }}'
    dest: "/etc/ssl/nginx/{{ file.name | split('/') | last }}"
    owner: root
    group: root
    mode: '{{ file.mode }}'
  become: true
  notify: restart NGINX
  loop:
    - { name: '{{ libretuya_https_certificate_file }}',  mode: '0644' }
    - { name: '{{ libretuya_https_key_file }}', mode: '0600' }
  loop_control:
    loop_var: file
  when:
    - libretuya_https_certificate_file is defined
    - libretuya_https_key_file is defined